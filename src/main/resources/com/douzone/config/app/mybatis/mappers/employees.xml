<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="employees">

	<select id="getDpAll" resultType="dutypositionvo">
		select a.dp_seq as dpSeq, a.dp_name as dpName, c.dp_name as dpNameEn
		from (select a.dp_seq, b.dp_name 
				from t_co_comp_duty_position a, t_co_comp_duty_position_multi b
				where a.dp_seq = b.dp_seq
				and b.lang_code = 'kr')a
		left outer join t_co_comp_duty_position_multi c
		on a.dp_seq = c.dp_seq
		and c.lang_code = 'en';
	</select>
	
	<select id="getEmpInfo" parameterType="map" resultType="employeesvo">
		select 
			  emp.emp_seq as empSeq,
			  emp.dept_seq as deptSeq,
			  pmp.dp_seq as positionCode,
			  pmd.dp_seq as dutyCode,
			  emp.emp_name as empName,
			  emp.login_id as loginId,
			  emp.home_tel_num as homeTelNum,
			  emp.mobile_tel_num as mobileTelNum,
			  d.emp_name as empNameEn, 
			  emp.comp_seq as compSeq,
			  emp.dept_name as deptName
		from (select
					d.dept_name,
					b.position_code as positionDuty,
					b.duty_code as deptDuty,
					e.emp_name,
					a.login_id,
					a.home_tel_num,
					a.mobile_tel_num,
					a.emp_seq,
					b.comp_seq,
                    b.biz_seq,
                    b.dept_seq
				  from t_co_emp a, t_co_emp_dept b, t_co_dept c, t_co_dept_multi d , t_co_emp_multi e 
				 where a.emp_seq = b.emp_seq
				   and b.dept_seq = c.dept_seq
				   and c.dept_seq = d.dept_seq 
				   and a.emp_seq = e.emp_seq
				   and e.lang_code = #{langCode}
				   and d.lang_code = #{langCode}) emp    
			LEFT OUTER JOIN t_co_comp_duty_position_multi pmp
				ON emp.positionDuty = pmp.dp_seq
				AND pmp.lang_code = #{langCode}
				AND pmp.dp_type = 'POSITION'
			LEFT OUTER JOIN t_co_comp_duty_position_multi pmd
				ON emp.deptDuty = pmd.dp_seq
				AND pmd.lang_code = #{langCode}
				AND pmd.dp_type = 'DUTY'
			LEFT OUTER JOIN t_co_emp_multi d
				on emp.emp_seq = d.emp_seq
				and d.lang_code = 'en'
			where	
		<choose>
			<when test='type == "a"'>
				emp.comp_seq = #{seq}
			</when>
			<when test='type == "b"'>
				emp.biz_seq = #{seq}
			</when>
			<when test='type == "d"'>
				emp.dept_seq = #{seq}
			</when>
		</choose>
				order by ${column} ${sorting} limit #{startboard}, #{manyboard};
	</select>
	
	<select id="search" parameterType="map" resultType="employeesvo">
	SELECT 
		/*+ RULE */ 
	    empSeq,
	    positionCode,
	    dutyCode,
	    deptName,
	    empName,
	    loginId,
	    homeTelNum,
	    mobileTelNum,
	    deptSeq, 
		empNameEn,
		deptNameEn
		from
		<choose>
			<when test='langCode == "kr"'>
					 quicksilver_douzone
			</when>
			
			<otherwise>
					quicksilver_douzone_en
			</otherwise>
		</choose>
	WHERE		
	 <choose>
	  <when test='selectSearch == "all"'>
		 	`query` = '"*${kwd}*";
		 	<if test="sorting != null and column != null">
		 		sort=attr_${sorting}:${column};
		 	</if>
		 	limit=100050;mode=boolean;maxmatches=100050;'
		</when>
		
		<when test='selectSearch == "emp"'>			
   			 `query` = '@(empName, loginId) "*${kwd}*";
   			 <if test="sorting != null and column != null">
		 		sort=attr_${sorting}:${column};
		 	</if>
   			 limit=110000;mode=boolean;maxmatches=110000;'
		</when>
		<when test='selectSearch == "dept"'>
		 		 `query` = '@deptName "*${kwd}*";
		 		 <if test="sorting != null and column != null">
		 			sort=attr_${sorting}:${column};
		 		 </if>
		 		 limit=110000;mode=boolean;maxmatches=110000;'
		</when>
		<when test='selectSearch == "position"'>
 				`query` = '@positionCodeName "*${kwd}*";
 				<if test="sorting != null and column != null">
		 			sort=attr_${sorting}:${column};
		 		</if>
 				limit=110000;mode=boolean;maxmatches=110000;'		
 		</when>
		<when test='selectSearch == "duty"'>
 				`query` = '@dutyCodeName "*${kwd}*";
 				<if test="sorting != null and column != null">
		 			sort=attr_${sorting}:${column};
		 		</if>
 				limit=110000;mode=boolean;maxmatches=110000;'		
		</when>
		<when test='selectSearch == "call"'>
				`query` = '@homeTelNum "*${kwd}*";
				<if test="sorting != null and column != null">
		 			sort=attr_${sorting}:${column};
		 		</if>
				limit=110000;mode=boolean;maxmatches=110000;'
		</when>
		<when test='selectSearch == "phone"'>
				`query` = '@mobileTelNum "*${kwd}*";
				<if test="sorting != null and column != null">
		 			sort=attr_${sorting}:${column};
		 		</if>
				limit=110000;mode=boolean;maxmatches=110000;'
		</when>
		
	</choose> 
 					<!-- limit #{startboard}, #{manyboard}; -->
	</select>
	
	
	<select id="getdetailEmployeeInfo" parameterType="employeesvo" resultType="employeesvo">
		select 			
			  emp.pic_file_id as picFileID,	
			  emp.comp_name as compName,
			  emp.emp_name as empName,
			  emp.login_id as loginId, 
			  emp.bday,
              pmp.dp_seq as positionCode,
			  pmd.dp_seq as dutyCode,
			  emp.dept_name as deptName,
              emp.mobile_tel_num as mobileTelNum,
			  emp.home_tel_num as homeTelNum,
              emp.fax_num as faxNum,
			  emp.comp_domain as compDomain,
              emp.email_addr as emailAddr,
              emp.main_work as mainWork,
              emp.emp_seq as empSeq,
              emp.comp_seq as compSeq
		from (select
					a.pic_file_id,
					h.comp_name,
					d.dept_name,
					b.position_code as positionDuty,
					b.duty_code as deptDuty,
					e.emp_name,
					a.login_id,
                    a.bday,
					a.home_tel_num,
					a.mobile_tel_num,
					a.emp_seq,
                    b.fax_num,
                    a.email_addr,
                    f.comp_domain,
                    g.main_work,
				    b.comp_seq,
                    b.biz_seq,
                    b.dept_seq
				  from t_co_emp a, t_co_emp_dept b, t_co_dept c, t_co_dept_multi d , t_co_emp_multi e, t_co_comp f, t_co_emp_multi g, t_co_comp_multi h
				 where a.emp_seq = b.emp_seq
				   and b.dept_seq = c.dept_seq
				   and c.dept_seq = d.dept_seq 
				   and a.emp_seq = e.emp_seq
                   and b.comp_seq = f.comp_seq
                   and a.emp_seq = g.emp_seq
                   and b.comp_seq = h.comp_seq
                   and h.lang_code = #{langCode}
				   and e.lang_code = #{langCode}
				   and d.lang_code = #{langCode}
				   and g.lang_code = #{langCode})emp    
			LEFT OUTER JOIN t_co_comp_duty_position_multi pmp
				ON emp.positionDuty = pmp.dp_seq
				AND pmp.lang_code = #{langCode}
				AND pmp.dp_type = 'POSITION'
			LEFT OUTER JOIN t_co_comp_duty_position_multi pmd
				ON emp.deptDuty = pmd.dp_seq
				AND pmd.lang_code = #{langCode}
				AND pmd.dp_type = 'DUTY'
		   where emp.emp_seq=#{empSeq}
           and emp.dept_seq=#{deptSeq};
	</select>
	
	
	<select id="getdetailNavPoint" parameterType="employeesvo" resultType="employeedeptinfovo">
		<![CDATA[
			select dept_seq as deptSeq,biz_seq as bizSeq,comp_seq as compSeq from t_co_emp_dept where emp_seq=#{empSeq} and dept_seq=#{deptSeq}; 
		]]>
	</select>
	
	<select id="getdetailNavPointParents" parameterType="departmentsvo" resultType="departmentsvo">
		<![CDATA[			
			 select a.parent_dept_seq as parentDeptSeq, (select dept_name
											  from t_co_dept_multi
											 where dept_seq = (select parent_dept_seq from t_co_dept where dept_seq = #{deptSeq})
											   and lang_code = #{langCode}) as deptName,
														( select biz_name 
														    from t_co_biz_multi 
														   where biz_seq 
														     and lang_code = #{langCode}
														     and biz_seq = (select parent_dept_seq from t_co_dept where dept_seq = #{deptSeq})) as bizName																				 
			  from t_co_dept a, t_co_dept_multi b
			 where a.dept_seq = b.dept_seq 
			   and a.dept_seq = #{deptSeq}
			   and b.lang_code= #{langCode};
		]]>
	</select>
	
	
	<update id="profilePictureUpdate" parameterType="employeesvo">
		<![CDATA[
			update t_co_emp set pic_file_id = #{picFileID} where emp_seq = #{empSeq}
		]]>
	</update>
	
	<insert id="insert" parameterType="employeesvo">
		
		<choose>
			<when test="">
				
			</when>
		</choose>
		<![CDATA[
			
		]]>
	</insert>	
</mapper>