<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="employees">
	
	<select id="getEmpInfo" parameterType="map" resultType="employeesvo">
		select a.emp_name as empName, b.사원번호 as empNum, b.직급 as positionCode, b.직책 as dutyCode, c.부서명 as deptName, c.주부서여부 as mainDeptYn, c.사업장시퀀스 as bizSeq, c.회사시퀀스 as compSeq, c.그룹시퀀스 as groupSeq, 
				if(b.성별 = 'M', '남', '여') as genderCode, (left(now(), 4)-left(b.생일, 4))+1 as bDay
  		from t_co_emp_multi a,(select emp.emp_seq as 사원번호,
  								emp.bday as 생일,
                                emp.pic_file_id as 프로필,
                                emp.gender_code as 성별,
                                pmp.dp_name as 직급,
                                pmd.dp_name as 직책,
                                emp.email_addr as 이메일,
                                emp.mobile_tel_num as 전화번호
                           from t_co_emp emp
                LEFT OUTER JOIN t_co_comp_duty_position_multi pmp
                             ON emp.position_code = pmp.dp_seq
                            AND pmp.lang_code = #{langCode}
                            AND pmp.dp_type = 'POSITION'
                LEFT OUTER JOIN t_co_comp_duty_position_multi pmd
                             ON emp.duty_code = pmd.dp_seq
                            AND pmd.dp_type = 'DUTY') b, ( select a.emp_seq as '사원번호',
                                                                   e.dept_name as '부서명',
                                                                   b.main_dept_yn as '주부서여부',
                                                                   b.biz_seq as '사업장시퀀스',
                                                                   b.comp_seq as '회사시퀀스',
                                                                   b.group_seq as '그룹시퀀스'
                                                              from t_co_emp a, t_co_emp_dept b, t_co_dept d, t_co_dept_multi e
                                                             where a.emp_seq = b.emp_seq
                                                               and b.dept_seq = d.dept_seq
                                                               and d.dept_seq = e.dept_seq
                                                               and e.lang_code = #{langCode}
                                                               and d.dept_seq = #{seq}) c
 		where a.emp_seq = b.사원번호
   		and b.사원번호 = c.사원번호;
	</select>
	
	<select id="search" parameterType="map" resultType="employeesvo">
		select distinct a.emp_name as empName, b.사원번호 as empNum, b.직급 as positionCode, b.직책 as dutyCode, c.부서명 as deptName, c.주부서여부 as mainDeptYn, c.사업장시퀀스 as bizSeq, c.회사시퀀스 as compSeq, c.그룹시퀀스 as groupSeq,
		 		if(b.성별 = 'M', '남', '여') as genderCode, (left(now(), 4)-left(b.생일, 4))+1 as bDay
 		from t_co_emp_multi a,(select emp.emp_seq as 사원번호,
								emp.bday as 생일,
                               emp.pic_file_id as 프로필,
                               emp.gender_code as 성별,
                               pmp.dp_name as 직급,
                               pmd.dp_name as 직책
                          from t_co_emp emp
               LEFT OUTER JOIN t_co_comp_duty_position_multi pmp
                            ON emp.position_code = pmp.dp_seq
                           AND pmp.lang_code ='kr'
                           AND pmp.dp_type = 'POSITION'
               LEFT OUTER JOIN t_co_comp_duty_position_multi pmd
                            ON emp.duty_code = pmd.dp_seq
                           AND pmd.dp_type = 'DUTY') b, ( select a.emp_seq as '사원번호',
                                                                  e.dept_name as '부서명',
                                                                  b.main_dept_yn as '주부서여부',
                                                                  b.biz_seq as '사업장시퀀스',
                                                                  b.comp_seq as '회사시퀀스',
                                                                  b.group_seq as '그룹시퀀스'
                                                             from t_co_emp a, t_co_emp_dept b, t_co_emp_comp c, t_co_dept d, t_co_dept_multi e
                                                            where a.emp_seq = b.emp_seq
                                                              and b.dept_seq = c.dept_seq
                                                              and b.dept_seq = d.dept_seq
                                                              and d.dept_seq = e.dept_seq
                                                              and e.lang_code = 'kr'
                                                              and d.dept_seq = '1') c
		where a.emp_seq = b.사원번호
  		and b.사원번호 = c.사원번호
  		and a.emp_name = #{kwd};
	</select>
	
	<select id="getDepartmentEmployeeInfo" 
		parameterType="Long" resultType="employeesvo">
		
		<![CDATA[
		select a.no as no,
			   a.profile as profile,
	           a.name as name,
	           a.age as age,
	           a.gender as gender,
	           c.name as grade,
	           a.email as email,
	           a.phone as phone,
	           e.name as departments
		  from employees a, grade_emp b, grade c, dept_emp d, departments e 
		 where a.no = b.emp_no
	       and c.no = b.grade_no
	       and a.no = d.emp_no
	       and e.no = d.departments_no
	       and b.to_date = '9999-01-01'
	       and d.to_date = '9999-01-01'
	       and d.departments_no = ${value};
		]]>
	</select>
	
	<select id="getDepartmentEmployeeInfoLeader" 
		parameterType="Long" resultType="deptmanagervo">
		
		<![CDATA[
		select emp_no as empNo, b.name as name
		  from dept_manager a, employees b 
		 where a.emp_no = b.no
		   and departments_no = ${value}
		   and a.to_date = '9999-01-01';
		]]>
	</select>
	
	<!-- <select id="search" 
		parameterType="map" resultType="employeesvo">
		
		<![CDATA[
			select a.no as no,
			   a.profile as profile,
	           a.name as name,
	           a.age as age,
	           a.gender as gender,
	           c.name as grade,
	           a.email as email,
	           a.phone as phone,
	           e.name as departments
		  from employees a, grade_emp b, grade c, dept_emp d, departments e 
		 where a.no = b.emp_no
	       and c.no = b.grade_no
	       and a.no = d.emp_no
	       and e.no = d.departments_no
	       and b.to_date = '9999-01-01'
	       and d.to_date = '9999-01-01'
		]]>
		
		<choose>
			<when test="selectSearch == 1"> 이름 검색
				AND a.name = #{kwd}
			</when>
			
			<when test="selectSearch == 2"> 부서 검색
			 	AND c.name = #{kwd}
			</when>
		</choose>
		
	</select> -->
	
	<insert id="insert" parameterType="employeesvo">
		<choose>
			<!-- salaires insert -->
			<when test="name == null and age != null">
				
				<![CDATA[
					insert into salaries values(null, 
												#{no}, 
												(select hire_date from employees where no = #{no}), 
												(select age from employees where no = #{no}) * 100,
												'9999-01-01' );
				]]>
			</when>
			
			<!-- grade_emp insert -->
			<when test="name == null and age == null and gender != null">
				
				<![CDATA[
					insert into grade_emp values(null, 
												(SELECT CASE 
														WHEN age >= 60 THEN 8 
														WHEN age >= 55 THEN 7 
														WHEN age >= 50 THEN 6 
														WHEN age >= 45 THEN 5 
														WHEN age >= 40 THEN 4 
														WHEN age >= 35 THEN 3 
														WHEN age >= 30 THEN 2 
														ELSE 1 
														END 
														FROM (SELECT age FROM employees WHERE no = #{no}) a
													), 
													#{no}, 
													(select hire_date from employees where no = #{no}), 
													'9999-01-01')
				]]>
			</when>
			
			<!-- dept_emp insert -->
			<when test="name == null and age == null and gender == null and phone != null">
				<![CDATA[
					insert into dept_emp values(null, 
												#{departmentsNo}, 
												#{no}, 
												(select hire_date from employees where no = #{no}), 
												'9999-01-01')
				]]>
			</when>
			
			<!-- dept_manager insert -->
			<when test="name == null and age == null and gender == null and phone == null">
			
				<![CDATA[
					insert into dept_manager values(null, 
													#{no}, 
													#{departmentsNo}, 
													(select hire_date from employees where no = #{no}),
													 '9999-01-01');
				]]>
			</when>
			
			<otherwise>
				<![CDATA[
					insert into employees values(null, #{name},
													   #{age}, 
													   #{gender}, 
													   #{phone}, 
													   #{address}, 
													   #{residentNum}, 
													   #{profile}, 
													   #{email},
													   #{hireDate} );
				]]>
			
			</otherwise>
			
		</choose>
		
		<selectKey keyProperty="no" resultType="Long" order="AFTER">
			
				<![CDATA[
					select last_insert_id()
				]]>
		</selectKey>
		
	</insert>
	
	<select id="getdetailEmployeeInfo" parameterType="employeesvo" resultType="employeesvo">
		<![CDATA[
			SELECT 
				b.emp_name AS empName,
				DATE_FORMAT(NOW(), '%Y') - DATE_FORMAT(emp.bday, '%Y') AS age,
				if(emp.gender_code = 'M', '남', '여') AS genderCode,
		    (SELECT 
		            group_name
		        FROM
		            t_co_group
		        WHERE
		            group_seq = emp.group_seq) AS groupSeq,
		    (SELECT 
		            comp_name
		        FROM
		            t_co_comp_multi
		        WHERE
		            comp_seq = emp.main_comp_seq
		                AND lang_code = #{langCode}) AS mainCompSeq,
		    (SELECT 
		            biz_name AS bizName
		        FROM
		            t_co_biz_multi
		        WHERE
		            biz_seq = (SELECT 
		                    biz_seq
		                FROM
		                    t_co_emp_dept
		                WHERE
		                    emp_seq = emp.emp_seq)
		                AND lang_code = #{langCode}) AS bizName,
		    emp.wedding_yn AS weddingYn,
		    b.main_work AS mainWork,
		    emp.join_day AS joinDay,
		    pmp.dp_name as positionCode,
		    pmd.dp_name as dutyCode,
		    date_format(emp.bday, '%m월 %d일') as bDay,
		    b.detail_addr as detailAddr,
		    emp.pic_file_id as picFileID,
		    emp.mobile_tel_num as mobileTelNum,
		    emp.email_addr as emailAddr
		    
		FROM
		    t_co_emp emp
		        LEFT OUTER JOIN
		    t_co_comp_duty_position_multi pmp ON emp.position_code = pmp.dp_seq
		        AND pmp.lang_code = #{langCode}
		        AND pmp.dp_type = 'POSITION'
		        LEFT OUTER JOIN
		    t_co_comp_duty_position_multi pmd ON emp.duty_code = pmd.dp_seq
		        AND pmd.lang_code = #{langCode}
		        AND pmd.dp_type = 'DUTY',
		    t_co_emp_multi b
		WHERE
		    emp.emp_seq = b.emp_seq
		        AND emp.emp_seq = #{empNum};
		]]>
	</select>
</mapper>