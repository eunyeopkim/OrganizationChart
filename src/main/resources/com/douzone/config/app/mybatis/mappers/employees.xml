<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="employees">
	
	<select id="getDepartmentEmployeeInfo" 
		parameterType="Long" resultType="employeesvo">
		
		<![CDATA[
		select a.no as no,
			   a.profile as profile,
	           a.name as name,
	           a.age as age,
	           a.gender as gender,
	           c.name as grade,
	           a.email as email,
	           a.phone as phone,
	           e.name as departments
		  from employees a, grade_emp b, grade c, dept_emp d, departments e 
		 where a.no = b.emp_no
	       and c.no = b.grade_no
	       and a.no = d.emp_no
	       and e.no = d.departments_no
	       and b.to_date = '9999-01-01'
	       and d.to_date = '9999-01-01'
	       and d.departments_no = ${value};
		]]>
	</select>
	
	<select id="getDepartmentEmployeeInfoLeader" 
		parameterType="Long" resultType="deptmanagervo">
		
		<![CDATA[
		select emp_no as empNo, b.name as name
		  from dept_manager a, employees b 
		 where a.emp_no = b.no
		   and departments_no = ${value}
		   and a.to_date = '9999-01-01';
		]]>
	</select>
	
	<select id="search" 
		parameterType="map" resultType="employeesvo">
		
		<![CDATA[
			select a.no as no,
			   a.profile as profile,
	           a.name as name,
	           a.age as age,
	           a.gender as gender,
	           c.name as grade,
	           a.email as email,
	           a.phone as phone,
	           e.name as departments
		  from employees a, grade_emp b, grade c, dept_emp d, departments e 
		 where a.no = b.emp_no
	       and c.no = b.grade_no
	       and a.no = d.emp_no
	       and e.no = d.departments_no
	       and b.to_date = '9999-01-01'
	       and d.to_date = '9999-01-01'
		]]>
		
		<choose>
			<when test="selectSearch == 1"> <!-- 이름 검색 -->
				AND a.name = #{kwd}
			</when>
			
			<when test="selectSearch == 2"> <!-- 부서 검색 -->
			 	AND c.name = #{kwd}
			</when>
		</choose>
		
	</select>
	
	<insert id="insert" parameterType="employeesvo">
		<choose>
			<!-- salaires insert -->
			<when test="name == null and age != null">
				
				<![CDATA[
					insert into salaries values(null, 
												#{no}, 
												(select hire_date from employees where no = #{no}), 
												(select age from employees where no = #{no}) * 100,
												'9999-01-01' );
				]]>
			</when>
			
			<!-- grade_emp insert -->
			<when test="name == null and age == null and gender != null">
				
				<![CDATA[
					insert into grade_emp values(null, 
												(SELECT CASE 
														WHEN age >= 60 THEN 8 
														WHEN age >= 55 THEN 7 
														WHEN age >= 50 THEN 6 
														WHEN age >= 45 THEN 5 
														WHEN age >= 40 THEN 4 
														WHEN age >= 35 THEN 3 
														WHEN age >= 30 THEN 2 
														ELSE 1 
														END 
														FROM (SELECT age FROM employees WHERE no = #{no}) a
													), 
													#{no}, 
													(select hire_date from employees where no = #{no}), 
													'9999-01-01')
				]]>
			</when>
			
			<!-- dept_emp insert -->
			<when test="name == null and age == null and gender == null and phone != null">
				<![CDATA[
					insert into dept_emp values(null, 
												#{departmentsNo}, 
												#{no}, 
												(select hire_date from employees where no = #{no}), 
												'9999-01-01')
				]]>
			</when>
			
			<!-- dept_manager insert -->
			<when test="name == null and age == null and gender == null and phone == null">
			
				<![CDATA[
					insert into dept_manager values(null, 
													#{no}, 
													#{departmentsNo}, 
													(select hire_date from employees where no = #{no}),
													 '9999-01-01');
				]]>
			</when>
			
			<otherwise>
				<![CDATA[
					insert into employees values(null, #{name},
													   #{age}, 
													   #{gender}, 
													   #{phone}, 
													   #{address}, 
													   #{residentNum}, 
													   #{profile}, 
													   #{email},
													   #{hireDate} );
				]]>
			
			</otherwise>
			
		</choose>
		
		<selectKey keyProperty="no" resultType="Long" order="AFTER">
			
				<![CDATA[
					select last_insert_id()
				]]>
		</selectKey>
		
	</insert>

	<!-- 연봉 변경 -->
	<update id="updateSalaryToDate" parameterType="long">
		update salaries set to_date = date_format(now(), "%c/%e/%Y") where emp_no = #{no}
	</update>
	
	<insert id="insertSalary" parameterType="map">
		insert into salaries values(null, #{no}, date_format(now(), "%c/%e/%Y"), #{salary}, '9999-01-01')
	</insert>
	
	<!-- 직급 변경 -->
	<update id="updateGradeToDate" parameterType="long">
		update grade_emp set to_date = date_format(now(), "%c/%e/%Y") where emp_no = #{no}
	</update>
	
	<insert id="insertGrade" parameterType="map">
		insert into grade_emp values(null, (select no from grade where name = '#{grade}'), #{no}, date_format(now(), "%c/%e/%Y"), '9999-01-01')
	</insert>
	
	<!-- 부서 변경 -->
	<update id="updateDeptToDate" parameterType="long">
		update dept_emp set to_date = date_format(now(), "%c/%e/%Y") where emp_no = #{no}
	</update>
	
	<insert id="insertDept" parameterType="map">
		insert into dept_emp values(null, #{departmentsNo}, #{no}, date_format(now(), "%c/%e/%Y"), '9999-01-01')
	</insert>
	
</mapper>